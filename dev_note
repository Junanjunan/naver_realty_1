# 내부 스크롤 내리기 https://stackoverflow.com/questions/41744368/scrolling-to-element-using-webdriver/41744403 and https://stackoverflow.com/questions/34562095/scrollintoview-vs-movetoelement

    from selenium import webdriver


    url = "www.example.com"

    driver = webdriver.Chrome()
    driver.get(url)

        for i in range(1, 100):
            flag = driver.find_element_by_xpath('/html/body/div[2]/div/section/div[2]/div[1]/div/div[2]/div/div[2]/div/div/div[1]/div[{}]'.format(i))
            driver.execute_script("arguments[0].scrollIntoView();", flag)


# list를 string으로 변환 - python list to sring

    naver_list_string = ''

    for i in naver_list:
        naver_list_string += str(i)+","


# UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-2: ordinal not in range(128)
    https://ourcstory.tistory.com/39
        파이썬으로 구현을 하다보면 한번씩은 겪는 UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-3: ordinal not in range(128)
        파이썬은 기본적으로 unicode를 사용한다. 그렇기 때문에 한글을 사용하기 위해서는  unicode를 utf-8로 변환해서만 사용할 수 있다.  변경하는 방법은 아주 간단하다. unicode를 utf8로 encoding을 해주면 문제를 해결할 수 있다. 

        예를 들어서 웹페이지에서 한글 텍스트를 입력받은 값을 website.text라고 가정하자. 아래 내용은 website.text를 print문으로 출력했을때 UnicodeEncodeError가 발생한다. python 내장함수인 type으로 website.site의 형태를 보면  unicode임을 알 수 있다. 

        unicode인 website.text를 'utf8'로 encode하면 text의 type은 unicode에서 str으로 변환이 되고, 출력을 제대로 할 수 있다. 

        ex) naver_list_string = naver_list_string.encode('utf8')


# Sending Emails With Python

    https://realpython.com/python-send-email/

        import smtplib, ssl

        port = 465
        password = os.environ.get('EMAIL_PASSWORD')

        context = ssl.create_default_context()

        with smtplib.SMTP_SSL("smtp.gmail.com", port, context=context) as server:
            server.login("taltalmailing@gmail.com", password)
            server.sendmail('taltalmailing@gmail.com', 'jjj1305@hanmail.net', "Hi")
            server.sendmail('taltalmailing@gmail.com', 'kjhwnsghksk@naver.com', "Hi")

    * using yagmail

        import yagmail

        sender = 'taltalmailing@gmail.com'
        password = '~~~'
        receiver = 'jjj1305@hanmail.net'
        body = "Hello there from Yagmail"
        filename = "구의빌라.xlsx"

        yag = yagmail.SMTP(sender, password)
        yag.send(
            to=receiver,
            subject="Yagmail test with attachment",
            contents=body, 
            attachments=filename,
        )

    # Sending Email with Multiple Attachments in Yagmail
        https://mailtrap.io/blog/yagmail-tutorial/#Sending-Email-with-Multiple-Attachments-in-Yagmail

        yag.send(
            to='user1@gmail.com', 
            subject='Sending Attachments', 
            contents='Please find the images attached', 
            attachments=['Desktop/File 1/image1.png','Desktop/File 1/gantt2.png','Desktop/File 1/gantt3.png']
            )


# Get current URL from browser using python
    from selenium import webdriver
    driver = webdriver.Firefox()
    print (driver.current_url)


# 파이썬 웹크롤링 iframe 페이지 Selenium으로 처리하는 방법
    https://hogni.tistory.com/105


# f-string in python3
    https://bluese05.tistory.com/70
        f'Hi, I am {name}, I am {job} and I like to use {language}. I am {sex} and I was {married}. Nice to meet you.' 
    >>> 'Hi, I am song, I am s/w engineer and I like to use python. I am male and I was married. Nice to meet you.'


# dictionary for loop
    a_dict = {'a': 1, 'b':2, 'c': 3}

    for a in a_dict:
        print(a)             -> a: key
        print(a_dict[a])     -> a_dict[a]: value (a key의 value)
        print("-----")


# add hyperlink to excel sheet created by pandas dataframe to_excel method

    df = pd.DataFrame({'Year': [2000, 2001, 2002, 2003]})

    def make_hyperlink(value):
        url = "https://custom.url/{}"
        return '=HYPERLINK("%s", "%s")' % (url.format(value), value)

    df['hyperlink'] = df['Year'].apply(lambda x: make_hyperlink(x))

    df.to_excel("test.xlsx")

        -> '=HYPERLINK("%s", "%s")' % (url.format(value), value) url.format(value) 자리는 url, 뒤 value는 url 대신에 나타날 대표값 의미. 뒤 value 안쓰면 긴 url 그대로 표시

    나:
            for i in total_dict:
                df2 = pd.DataFrame([
                    {
                        '주소': i,
                        '광고확인일': total_dict[i]['광고확인일'],
                        '거래방식': total_dict[i]['거래방식'],
                        '가격': total_dict[i]['가격'],
                        '특징': total_dict[i]['특징'],
                        '중개사': total_dict[i]['중개사'],
                        'url': '=HYPERLINK("{}")'.format(total_dict[i]['url']),
                        # '호실': total_dict[i]['호실'],
                        # '연락처': total_dict[i]['연락처'],
                    }
                ])
                
                df1 = df1.append(df2)
            
            df1.to_excel('{}.xlsx'.format(url))

    또는
            for i in total_dict:
                df2 = pd.DataFrame([
                    {
                        '주소': i,
                        '광고확인일': total_dict[i]['광고확인일'],
                        '거래방식': total_dict[i]['거래방식'],
                        '가격': total_dict[i]['가격'],
                        '특징': total_dict[i]['특징'],
                        '중개사': total_dict[i]['중개사'],
                        'url': '=HYPERLINK("{}", "{}")'.format(total_dict[i]['url'], i),
                        # '호실': total_dict[i]['호실'],
                        # '연락처': total_dict[i]['연락처'],
                    }
                ])
                
                df1 = df1.append(df2)
            
            df1.to_excel('{}.xlsx'.format(url))


# pandas: drop column in pandas dataframe
    https://www.geeksforgeeks.org/how-to-drop-one-or-multiple-columns-in-pandas-dataframe/

    # Remove column name 'A', 'B'
    df.drop(['A', 'B'], axis = 1) (or df.drop['A', 'B'], axis=1, inplace=True)

    # Remove three columns as index base
    df.drop(df.columns[[0, 4, 2]], axis = 1, inplace = True)

    # Remove all columns between column index 1 to 3
    df.drop(df.iloc[:, 1:3], inplace = True, axis = 1)

    그 외 row drop
    https://www.geeksforgeeks.org/python-delete-rows-columns-from-dataframe-using-pandas-drop/?ref=lbp


    sample code

    import pandas as pd

    guui_villa = pd.read_excel('구의빌라.xlsx')
    guui_oneroom = pd.read_excel('구의원룸.xlsx')

    guui_villa.drop([0], inplace=True)
    guui_oneroom.drop([0], inplace=True)

    new_excel = guui_villa.append(guui_oneroom)
    
    new_excel.drop(new_excel.columns[0], axis=1, inplace=True)

    new_excel.to_excel('통합.xlsx')


# python check if dictionary has key
    print('key1' in dict.keys())


# python url query
    https://brownbears.tistory.com/501

    from urllib import parse

    parse_result = parse.urlparse(url)

    a = parse.parse_qs(parse_result.query)
    b = parse.parse_qsl(parse_result.query)

    qs: dict, qsl: list


# python make list by date with pandas

    today = datetime.date.today()
    
    today에서 이틀전 날짜 구하기
        - target_day = today - datetime.timedelta(days=2)

    date_range = pandas.date_range(start=target_day, end=today)

    위의 date_range를 list 형태로 만들기
        list_range = list(date_range)
        
    원하는 날짜 형태로 뽑아서 list로 만들기
        day_list = []
        for i in range(0, days+1):
            day_list.append(date_range[i].strftime('%y.%m.%d.'))


# pandas DataFrame index
    https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=nackji80&logNo=221643048859